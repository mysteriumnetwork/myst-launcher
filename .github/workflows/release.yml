name: release

on:
  push:
    # Publish semver tags as releases.
    tags:
      - '!dbg*'
      - '!*-dbg*'
      - '!*-fix*'
      - '*.*.*'

jobs:
  release-windows-amd64:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.19

    - name: Choco help
      uses: crazy-max/ghaction-chocolatey@v2
      with:
        args: -h

    - name: Build
      run: |
        go run cmd/resource/resource.go
        go build -v -trimpath -ldflags "-s -w -H windowsgui" -o  bin/myst-launcher-amd64.exe github.com/mysteriumnetwork/myst-launcher/cmd/app
        go build -v -trimpath -ldflags "-s -w -H windowsgui -X github.com/mysteriumnetwork/myst-launcher/const.VendorID=Kryptex_IU" -o  bin/myst-launcher-kryptex-amd64.exe github.com/mysteriumnetwork/myst-launcher/cmd/app
        go build -v -trimpath -ldflags "-s -w" -o  bin/myst-launcher-cli.exe github.com/mysteriumnetwork/myst-launcher/cmd/app-cli
      env:
        GOARCH: amd64
        GOOS: windows

    - name: Sign
      env:
        CODE_SIGNING_PFX: ${{ secrets.WINDOWS_CERTS }}
        CODE_SIGNING_PFX_PASSWORD: ${{ secrets.WINDOWS_CERTS_PASSWORD }}
        SIGNTOOL: "C:/Program Files (x86)/Windows Kits/10/bin/10.0.17763.0/x86/signtool.exe"
      run: |
        Set-Content -Path bundle.txt -Value $env:CODE_SIGNING_PFX
        certutil -decode bundle.txt bundle.pfx
        & $env:SIGNTOOL sign /fd SHA256 /f bundle.pfx /p "$env:CODE_SIGNING_PFX_PASSWORD" /tr "http://timestamp.digicert.com" /td SHA256 /d "Mysterium Launcher" bin/myst-launcher-amd64.exe
        & $env:SIGNTOOL sign /fd SHA256 /f bundle.pfx /p "$env:CODE_SIGNING_PFX_PASSWORD" /tr "http://timestamp.digicert.com" /td SHA256 /d "Mysterium Launcher" bin/myst-launcher-kryptex-amd64.exe
        & $env:SIGNTOOL sign /fd SHA256 /f bundle.pfx /p "$env:CODE_SIGNING_PFX_PASSWORD" /tr "http://timestamp.digicert.com" /td SHA256 /d "Mysterium Launcher" bin/myst-launcher-cli.exe

    - name: Build
      run: |
        choco install iconsext
        choco install wix
        $env:PATH=$env:PATH+";C:\Program Files (x86)\WiX Toolset v3.11\bin;C:\Program Files (x86)\NirSoft\IconsExtract"
        iconsext.exe /save "bin\myst-launcher-amd64.exe" "installer\" -icons
        candle installer\installer.wxs installer\licenseDialogue.wxs  -arch x64 -out installer\
        light installer\installer.wixobj installer\licenseDialogue.wixobj -dcl:high -ext WixUIExtension.dll -ext WixUtilExtension.dll -out installer\myst-launcher-x64.msi
        copy bin/myst-launcher-kryptex-amd64.exe bin/myst-launcher-amd64.exe
        light installer\installer.wixobj installer\licenseDialogue.wixobj -dcl:high -ext WixUIExtension.dll -ext WixUtilExtension.dll -out installer\myst-launcher-kryptex-x64.msi

    - name: Sign
      env:
        CODE_SIGNING_PFX: ${{ secrets.WINDOWS_CERTS }}
        CODE_SIGNING_PFX_PASSWORD: ${{ secrets.WINDOWS_CERTS_PASSWORD }}
        SIGNTOOL: "C:/Program Files (x86)/Windows Kits/10/bin/10.0.17763.0/x86/signtool.exe"
      run: |
        Set-Content -Path bundle.txt -Value $env:CODE_SIGNING_PFX
        certutil -decode bundle.txt bundle.pfx
        & $env:SIGNTOOL sign /fd SHA256 /f bundle.pfx /p "$env:CODE_SIGNING_PFX_PASSWORD" /tr "http://timestamp.digicert.com" /td SHA256 /d "Mysterium Launcher" installer/myst-launcher-x64.msi
        & $env:SIGNTOOL sign /fd SHA256 /f bundle.pfx /p "$env:CODE_SIGNING_PFX_PASSWORD" /tr "http://timestamp.digicert.com" /td SHA256 /d "Mysterium Launcher" installer/myst-launcher-kryptex-x64.msi

    - name: Upload
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        files: |
          installer/myst-launcher-x64.msi
          installer/myst-launcher-kryptex-x64.msi
          bin/myst-launcher-cli.exe
          bin/myst-launcher-kryptex-amd64.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}